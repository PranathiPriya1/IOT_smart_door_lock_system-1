#include <Keypad.h>
#include <Servo.h>
#include <LiquidCrystal.h>
const byte ROWS = 4;
const byte COLS = 4;
char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2}; 
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);
Servo myServo;
const int rs = 0, en = 1, d4 = 13, d5 = 12, d6 = 11, d7 = 10;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
int pos = 0;
int i = 0;
char password[5];
char correctPassword[5] = "1234";  
void setup() {
  myServo.attach(10); 
  myServo.write(pos);
  lcd.begin(16, 2);
  lcd.print("DOOR LOCK SYSTEM");
  delay(3000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Enter Password");
}
void loop() {
  char key = customKeypad.getKey();
  if (key) {
    if (key != '#' && key != 'D') {
      if (i < 4) { 
        lcd.setCursor(i, 1);
        lcd.print('*');
        password[i] = key;
        password[i + 1] = '\0';
        i++;
      }
    }
    if (key == '#') {
      if (strcmp(password, correctPassword) == 0) {
        lcd.clear();
        lcd.print("ACCESS GRANTED");
        delay(3000);
        lcd.clear();
        lcd.print("WELCOME HOME");
        ServoOpen();
        clearData();
      } else {
        lcd.clear();
        lcd.print("ACCESS DENIED");
        delay(2000);
        lcd.setCursor(0, 0);
        lcd.print("Enter Password");
        clearData();
      }
      i = 0;  
    }
    if (key == 'D') {
      lcd.clear();
      ServoClose();
      lcd.print("CLOSING..");
      delay(4000);
      lcd.setCursor(0, 0);
      lcd.print("Enter Password");
      clearData();
    }
  }
  delay(50); 
}
void ServoOpen() {
  pos = 0;
  for (; pos <= 180; pos += 10) {
    myServo.write(pos);
    delay(40);  
  }
}
void ServoClose() {
  pos = 180;  
  for (; pos >= 0; pos -= 10) {
    myServo.write(pos);
    delay(40);  
  }
}
void clearData() {
  for (int j = 0; j < 5; j++) {
    password[j] = '\0';
  }
  i = 0;
}